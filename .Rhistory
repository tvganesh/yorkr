y = ~strikeRate,
size = ~runs*strikeRate,
color = ~batsman,
frame = ~year,
text = ~batsman,
#hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
fig <- df4 %>%
plot_ly(
x = ~runs,
y = ~strikeRate,
size = ~runs*strikeRate^2,
color = ~batsman,
frame = ~year,
text = ~batsman,
#hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01","2020-01-01","2021-01-01")
dateRange2=c("2008-12-31","2009-12-31","2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2008","2009","2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
battingDetails <- paste(type,"-BattingDetails.RData",sep="")
df2 <- NULL
for (i in 1:14){
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
df1$year=year1[i]
df2 <- rbind(df2,df1)
}
df3 <- df2 %>% arrange(desc(runs,SR))
df4 <- df3 %>% filter(runs >= 70)
fig <- df4 %>%
plot_ly(
x = ~runs,
y = ~strikeRate,
size = ~runs*strikeRate^2,
color = ~batsman,
frame = ~year,
text = ~batsman,
#hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
df2 <- NULL
i=1
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
View(df1)
df2 <- df1 %>% summarise(group_by(batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
library(dplyr)
df2 <- df1 %>% summarise(group_by(batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
df2 <- summarise(group_by(df1, batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
View(df2)
df2 <- df2[complete.cases(df2),]
df2 <- NULL
for (i in 1:12){
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
df2 <- summarise(group_by(df1, batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
df2 <- df2[complete.cases(df2),]
df1$year=year1[i]
df2 <- rbind(df2,df1)
}
df2<- NULL
df3 <- NULL
for (i in 1:12){
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
df2 <- summarise(group_by(df1, batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
df2 <- df2[complete.cases(df2),]
df2$year=year1[i]
df3 <- rbind(df3,df2)
}
df4 <- df3 %>% arrange(desc(runs,SR))
View(df4)
df4 <- distinct(df4)
df4 <- df3 %>% arrange(desc(runs,SR))
df3 <- NULL
for (i in 1:12){
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
df2 <- summarise(group_by(df1, batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
df2 <- df2[complete.cases(df2),]
df2$year=year1[i]
df3 <- rbind(df3,df2)
}
df4 <- df3 %>% arrange(desc(runs,SR))
df4 <- df3 %>% arrange(desc(meanRuns,meanSR))
df4 <- distinct(df4)
View(df4)
fig <- df4 %>%
plot_ly(
x = ~runs,
y = ~strikeRate,
size = ~runs*strikeRate^2,
color = ~batsman,
frame = ~year,
text = ~batsman,
#hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
fig <- df4 %>%
plot_ly(
x = ~meanRuns,
y = ~meanSR,
size = ~meanRuns*meanSR^2,
color = ~batsman,
frame = ~year,
text = ~batsman,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr23Nov2021/yorkr")
df5 <- df4 %>% filter(meanRuns > quantile(meanRuns,prob=0.50))
df5 <- df4 %>% filter(meanRuns > quantile(meanRuns,prob=0.70))
fig <- df5 %>%
plot_ly(
x = ~meanRuns,
y = ~meanSR,
size = ~meanRuns*meanSR^2,
color = ~batsman,
frame = ~year,
text = ~batsman,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig
View(df5)
install.packages("gganimate")
library(gganimate)
install.packages("gifski")
library(gifski)
install.packages("av")
library(av)
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns*meanSR, colour = batsman)
) +
geom_point(show.legend = TRUE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns*meanSR, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p + transition_time(year) +
labs(title = "Year: {frame_time}")
p + transition_time(year) +
labs(title = "Year: {frame_time}")
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 100)) +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 5, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 100)) +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 2, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 100)) +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 2, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 100)) +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 2, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 100)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = meanRuns, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
p + transition_time(as.int(year)) +
labs(title = "Year: {frame_time}")
p + transition_time(as.int(year))
install.packages("googleVis")
library(googleVis)
gg<- gvisMotionChart(df5,
idvar = "batsman",
timevar = "year",
xvar = "meanRuns",
yvar = "meanSR",
sizevar ="meanRuns",
colorvar = "batsman")
df5$year= as.Date(df5$year)
df5 <- df5[complete.cases(df5),]
df5$year= as.Date(df5$year)
df$year
df5$year
df5$year= as.int(df5$year)
df5$year= as.integer(df5$year)
df5$year
gg<- gvisMotionChart(df5,
idvar = "batsman",
timevar = "year",
xvar = "meanRuns",
yvar = "meanSR",
sizevar ="meanRuns",
colorvar = "batsman")
plot(gg)
df5 <- df5[complete.cases(df5),]
df5$year= as.integer(df5$year)
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 1, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/animation")
p + transition_time(year) +
labs(title = "Year: {frame_time}")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
getwd()
p + transition_time(year) +
labs(title = "Year: {frame_time}")
getwd()
p <- ggplot(
df5,
aes(x = meanRuns, y=meanSR, size = 1, colour = batsman)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "Mean runs", y = "Mean SR")
p
p + transition_time(year) +
labs(title = "Year: {frame_time}")
source("animation-functions.R")
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
path="."
type="IPL"
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
setwd("~/backup/software/cricket-package/yorkr-cricsheet/animation1")
source("animation-functions.R")
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
path="."
type="IPL"
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
source("animation-functions.R")
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
path="."
type="IPL"
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
library(gganimate)Q
source("animation-functions.R")
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
path="."
type="IPL"
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
battingDetails <- paste(path,"/",type,"-BattingDetails.RData",sep="")
load(battingDetails)
df3 <- NULL
for (i in 1:12){
date1=as.Date(dateRange1[i])
date2=as.Date(dateRange2[i])
df=battingDF %>% filter(date >= date1  & date <= date2)
df1 <- select(df,batsman,runs,strikeRate)
df2 <- summarise(group_by(df1, batsman), meanRuns=mean(runs),meanSR=mean(strikeRate))
df2 <- df2[complete.cases(df2),]
df2$year=year1[i]
df3 <- rbind(df3,df2)
}
df3 <- df3 %>% filter(meanRuns > quantile(meanRuns,prob=0.70))
IPLBattingPerf <- df3 %>%
group_by(year) %>%
arrange(year, desc(meanRuns,meanSR)) %>%
mutate(ranking = row_number()) %>%
filter(ranking <=20)
a <- paste(type, " batting performance (sliding window of 3 years)")
animation <- IPLBattingPerf %>%
ggplot() +
geom_col(aes(ranking, meanRuns, fill = batsman)) +
geom_text(aes(ranking, meanRuns, label = meanRuns), hjust=-0.1) +
geom_text(aes(ranking, y=0 , label = batsman), hjust=1.1) +
xlab("meanRuns (past 3 years)")
animation <- IPLBattingPerf %>%
ggplot() +
geom_col(aes(ranking, meanRuns, fill = batsman)) +
geom_text(aes(ranking, meanRuns, label = meanRuns), hjust=-0.1) +
geom_text(aes(ranking, y=0 , label = batsman), hjust=1.1) +
xlab("meanRuns (past 3 years)")+
ggtitle(a) + theme(plot.title = element_text(size = 20, face = "bold")) +
geom_text(aes(x=15, y=max(meanSR) , label = as.factor(year)), vjust = 0.2, alpha = 0.5,  col = "gray", size = 20) +
coord_flip(clip = "off", expand = FALSE) + scale_x_reverse() +
theme_minimal() + theme(
panel.grid = element_blank(),
legend.position = "none",
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
plot.margin = margin(1, 4, 1, 3, "cm")
) +
transition_states(year, state_length = 0, transition_length = 2) +
enter_fade() +
exit_fade() +
ease_aes('quadratic-in-out')
animate(animation, width = 700, height = 432, fps = 15, duration = 15, rewind = FALSE)
source("animation-functions.R")
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
source("animation-functions.R")
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
source("animation-functions.R")
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
source("animation-functions.R")
computeRunSR(dateRange1,dateRange2,year,path=".",type="IPL")
anim_save("IPLBatting.gif", animation = last_animation(), path = ".")
source("animation-functions.R")
computewicketsER(dateRange1,dateRange2,year,path=".",type="IPL")
anim_save("IPLBowlers.gif", animation = last_animation(), path = ".")
source("animation-functions.R")
computewicketsER(dateRange1,dateRange2,year,path=".",type="IPL")
anim_save("IPLBowling.gif", animation = last_animation(), path = ".")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
dateRange1=c("2008-01-01","2009-01-01","2010-01-01","2011-01-01","2012-01-01","2013-01-01","2014-01-01","2015-01-01",
"2016-01-01","2017-01-01","2018-01-01","2019-01-01")
dateRange2=c("2010-12-31","2011-12-31","2012-12-31","2013-12-31","2014-12-31","2015-12-31",
"2016-12-31","2017-12-31","2018-12-31","2019-12-31","2020-12-31","2021-12-31")
year1 = c("2010","2011","2012" ,"2013","2014","2015","2016","2017","2018","2019","2020","2021")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
anim_save("IPLBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="mo")
anim_save("IPLBattingMiddleOvers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
anim_save("IPLBattingDeathOvers.gif", animation = last_animation(), path = ".")
source("animation-functions.R")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
anim_save("IPLBowlingPowerPlay.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="mo")
anim_save("IPLBowlingMiddleOvers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
anim_save("IPLBowlingDeathOvers.gif", animation = last_animation(), path = ".")
computeRunSR(dateRange1,dateRange2,year,path=".",type="T20M")
anim_save("T20MBatting.gif", animation = last_animation(), path = ".")
computewicketsER(dateRange1,dateRange2,year,path=".",type="T20M")
anim_save("T20MBowling.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBattingDeathovers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
anim_save("T20MBattingMiddleovers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBattingDeathovers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBowlingPowerPlay.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
anim_save("T20MBowlingMiddleovers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBowlingDeathovers.gif", animation = last_animation(), path = ".")
rm(list=ls())
load("/Users/tvganesh/junk/gpp2021-newfiles-backup/ipl/iplAllMatchesAllTeams/allMatchesAllOpposition-Chennai Super Kings.RData")
View(matches)
View(matches)
batsman="SK Raina"
bowler="R Ashwin"
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
library(dplyr)
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
bowler1="R Ashwin"
batsman1="SK Raina"
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
