getIPLBatsmen("./iplBattingBowlingDetails")
getIPLBowlers("./iplBattingBowlingDetails")
setwd("~/Downloads/ipl2021")
source("IPLutilities.R")
getIPLBatsmen("./iplBattingBowlingDetails")
load("/Users/tvganesh/Downloads/ipl2021/iplBattingBowlingDetails/Punjab Kings-BattingDetails.RData")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBowlingDetails("iplMatches","iplBattingBowlingDetails")
library(yorkr)
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
getwd()
setwd("~/Downloads/ipl2021")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
team="Punjab Kings"
dir="iplMatches"
a <- paste(dir,"/","*",team,"*",sep="")
# Gather team against all ooposition
fl <- Sys.glob(a)
length(fl)
for(i in 1:length(fl)){
# Add try-catch to handle issues
tryCatch({
load(fl[i])
match <- overs
details <- teamBattingPerfDetails(match,team,includeInfo=TRUE)
# If the side has not batted details will be NULL. Skip in that case
if(!is.null(dim(details))){
battingDetails <- rbind(battingDetails,details)
}else {
#print("Empty")
next
}
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
batting <- getTeamBattingDetails(team,dir=dir, save=TRUE,odir=odir)
odir="iplBattingBowlingDetails"
batting <- getTeamBattingDetails(team,dir=dir, save=TRUE,odir=odir)
team1="Rajasthan Royals"
team2="Royal Challengers Bangalore"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData")
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1")
dir="./ipl/iplMatches2Teams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
fl1 <- paste(dir,"/",di)
fl1 <- paste(dir,"/",d1)
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# FRahind rows by winnner, venue, date and result
a <- select(overs,date,venue,winner,result)
a <- select(matches,date,venue,winner,result)
a <- select(matches,date,venue,winner,result)
library(dplyr)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
source('~/backup/software/cricket-package/yorkrPackage/yorkr4Apr2021/yorkr/R/plotWinLossBetweenTeams.R')
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
library(ggplot2)
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title="aa"
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
team2="Kolkata Knight Riders"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
team1
dir="./ipl/iplAllMatchesAllTeams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-allMatchesAllTeams.RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllTeams-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins of",team1,"against all teams in all  matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
dir=>"./ipl/iplMatches2Teams"
dir="./ipl/iplMatches2Teams"
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
dir="./ipl/iplAllMatchesAllTeams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins of",team1,"against all teams in all  matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),"")))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr4Apr2021/yorkr")
library(yorkr)
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1")
shiny::runApp()
library(yorkr)
library(plotly)
library(dplyr)
library(ggplot2)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
install.packages("ggthemes")
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
ggplotly(ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))  %>%
layout(title = list(text = paste0(plot.title,
'<br>',
'<sup>',
'Data source:http://cricsheet.org/',
'</sup>')))
g <- ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
rlang::last_error()
dim(match())
dim(match)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1/ipl/iplMatches")
load("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1/ipl/iplMatches/Chennai Super Kings-Deccan Chargers-2008-05-06.RData")
match=overs
a <-filter(match,team==theTeam)
# Group batsman with non strikers and compute partnerships
df <- data.frame(summarise(group_by(a,batsman,nonStriker),sum(runs)))
library(dplyr)
library(plotly)
a <-filter(match,team==theTeam)
theTeam="Chennai Super Kings"
a <-filter(match,team==theTeam)
# Group batsman with non strikers and compute partnerships
df <- data.frame(summarise(group_by(a,batsman,nonStriker),sum(runs)))
names(df) <- c("batsman","nonStriker","runs")
opposition="aaa"
plot.title <- paste(theTeam,"Batting partnership in match (vs.",opposition,")")
g <- ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(g )%>%
layout(title = list(text = paste0(plot.title,
'<br>',
'<sup>',
'Data source:http://cricsheet.org/',
'</sup>')))
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
library(yorkr)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
setwd("~/Downloads")
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
library(yorkr)
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
setwd("~/backup/software/cricket-package/yorkrPackage/york16backup/yorkr")
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4')
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4")
deployApp()
rsconnect::deployApp()
getwd()
rsconnect::deployApp()
library(yorkr)
setwd("~/backup/software/cricket-package/yorkr-cricsheet")
convertYaml2RDataframeT20("335982.yaml,"ipl,"iplMatches")
convertYaml2RDataframeT20("335982.yaml","ipl,"iplMatches")
convertYaml2RDataframeT20("335982.yaml","ipl","iplMatches")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr20Sep2021/yorkr")
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.26.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.26.tar.gz")
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
rsconnwct::deployApp()
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-6")
rsconnwct::deployApp()
rsconnect::deployApp()
installed.packages("yorkr")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
rsconnect::deployApp()
rsconnect::deployApp()
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7")
runApp()
runApp()
library(yorkr)
runApp()
runApp()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7")
runApp()
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr20Sep2021/yorkr")
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
rsconnect::deployApp()
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-6")
rsconnect::deployApp()
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
rsconnect::deployApp()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-6")
rsconnect::deployApp()
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
install.packages("yorkr")
install.packages("yorkr")
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
install.packages("yorkr")
library(yorkr)
setwd("~/Downloads")
source("T20Mutilities.R")
convertAllYaml2RDataframesT20("t20s","t20MenMatches","t20WomenMatches")
convertAllYaml2RDataframesT20
source("T20Mutilities.R")
convertAllYaml2RDataframesT20("t20s","t20MenMatches","t20WomenMatches")
sourceDir="t20s"
targetDirMen="t20sMenMatches"
targetDirWomen="t20WomenMatches"
files <- list.files(sourceDir)
print(length(files))
iii=1
pth = paste(sourceDir,"/",files[iii],sep="")
cat("i=",iii,"  file=",pth,"\n")
# Load yaml file
a <- yaml.load_file(pth)
install.packages("yaml")
install.packages("yaml")
library(yaml)
# Load yaml file
a <- yaml.load_file(pth)
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][[10]] <- NULL #Players
a[[2]][[10]] <- NULL #Registry
a[[2]][[1]] <- NULL  #balls per over
# Cast as data frame for easy processing
tryCatch(b <- as.data.frame(a),
error = function(e) {
print("Error!")
eFile <- files[iii]
errorFile <- paste(targetDirMen,"/","errors.txt",sep="")
write(eFile,errorFile,append=TRUE)
}
)
targetDirMen
> targetDirMen=t20MenMatches
targetDirMen=t20MenMatches
# Cast as data frame for easy processing
tryCatch(b <- as.data.frame(a),
error = function(e) {
print("Error!")
eFile <- files[iii]
errorFile <- paste(targetDirMen,"/","errors.txt",sep="")
write(eFile,errorFile,append=TRUE)
}
)
as.dataframe(a)
convertAllYaml2RDataframesT20("ipl","iplMatches")
source("IPLutilities.R")
source("IPLutilities.R")
convertAllYaml2RDataframesT20("ipl","iplMatches")
install.packages("yorkr")
library(yorkr)
convertAllYaml2RDataframesT20("ipl","iplMatches")
convertAllYaml2RDataframesT20("t20s","t20MenMatches","t20WomenMatches")
files <- list.files(sourceDir)
print(length(files))
iii=1
pth = paste(sourceDir,"/",files[iii],sep="")
cat("i=",iii,"  file=",pth,"\n")
# Load yaml file
a <- yaml.load_file(pth)
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][[10]] <- NULL #Players
a[[2]][[10]] <- NULL #Registry
a[[2]][[1]] <- NULL  #balls per over
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][[10]] <- NULL #Players
a[[2]][[10]] <- NULL #Registry
a[[2]][[1]] <- NULL  #balls per over
# Load yaml file
a <- yaml.load_file(pth)
pth
pth1="ipl/335982.yaml"
# Load yaml file
a <- yaml.load_file(pth)
a[[2]]
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][[10]] <- NULL #Players
a[[2]][[10]] <- NULL #Registry
a[[2]][[1]] <- NULL  #balls per over
b <- yaml_load(pth1)
pth1
pth
b=yaml.load_file(pth1)
b=yaml.load_file(pth1)
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][['players']] <- NULL #Players
a[[2]][['registry']] <- NULL #Registry
a[[2]][['balls_per_over']] <- NULL  #balls per over
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr20Sep2021/yorkr")
library(yorkr)
source("IPLutilities.R")
setwd("~/Downloads")
convertAllYaml2RDataframesT20("ipl","iplMatches")
source("T20Wutilities.R")
convertAllYaml2RDataframesT20("t20s","t20MenMatches","t20WomenMatches")
saveAllMatchesBetweenTeams("t20MenMatches","t20Matches2Teams")
saveAllMatchesAllOpposition("t20MenMatches","t20AllMatchesAllTeams")
getT20BattingDetails("t20MenMatches","t20BattingBowlingDetails")
getT20BowlingDetails("t20MenMatches","t20BattingBowlingDetails")
getT20MBatsmen("t20BattingBowlingDetails")
getT20MBowlers("t20BattingBowlingDetails")
#Women
source("T20Wutilities.R")
#convertAllYaml2RDataframesT20("t20s","t20MenMatches","t20WomenMatches")
saveAllMatchesBetweenTeams("t20WomenMatches","t20WomenMatches2Teams")
saveAllMatchesAllOpposition("t20WomenMatches","t20WomenAllMatchesAllTeams")
getT20BattingDetails("t20WomenMatches","t20WomenBattingBowlingDetails")
getT20BowlingDetails("t20WomenMatches","t20WomenBattingBowlingDetails")
getT20WBatsmen("t20BattingBowlingDetails")
getT20WBowlers("t20BattingBowlingDetails")
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-7')
library(yorkr)
teamWicketsAcrossOvers(match,t1,t2)
t1="Afghanistan"
t2="Scotland"
load("/Users/tvganesh/Downloads/gpp2021-8/t20/t20MenMatches/Afghanistan-Scotland-2021-10-25.RData")
match=overs
library(dplyr)
library(ggplot2)
library(stringr)
library(plotly)
teamWicketsAcrossOvers(match,t1,t2)
