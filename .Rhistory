o <- NULL
n <- data.frame(name=character(0),matches=numeric(0),meanRuns=numeric(0),meanSR=numeric(0))
for (x in 1:length(batsmen)){
m <- filter(df,batsman==batsmen[x])
m <- mutate(m,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
m <- select(m,batsman,matches,meanRuns,meanSR)
n <- m[1,]
o <- rbind(o,n)
}
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
IPLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
mimMatches=50
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
IPLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
batsmen <- unique(df$batsman)
o <- NULL
n <- data.frame(name=character(0),matches=numeric(0),meanRuns=numeric(0),meanSR=numeric(0))
for (x in 1:length(batsmen)){
m <- filter(df,batsman==batsmen[x])
m <- mutate(m,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
m <- select(m,batsman,matches,meanRuns,meanSR)
n <- m[1,]
o <- rbind(o,n)
}
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
IPLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
}
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenBattingBowlingDetails"
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
odir
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblBattingBowlingDetails"
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
odir
# Create BBL dir - Batting/bowling details
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplBattingBowlingDetails"
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
mutate(df,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
df
mutate(df,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
View(battingDetails)
View(battingDetails)
b=summarise(group_by(a,batsman),matches=n())
b=summarise(group_by(df,batsman),matches=n())
b
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b
IPLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
IPLBatsmenRank <- arrange(b,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
# Select only players who have played 60 matches or more
p <- filter(b,matches >= minMatches)
# Select only players who have played 60 matches or more
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
c <- filter(b,matches >= minMatches)
minMatches=80
# Select only players who have played 60 matches or more
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2020R')
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
batsmen <- unique(df$batsman)
o <- NULL
n <- data.frame(name=character(0),matches=numeric(0),meanRuns=numeric(0),meanSR=numeric(0))
for (x in 1:length(batsmen)){
m <- filter(df,batsman==batsmen[x])
m <- mutate(m,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
m <- select(m,batsman,matches,meanRuns,meanSR)
n <- m[1,]
o <- rbind(o,n)
}
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
IPLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
df <- select(battingDF,batsman,runs,strikeRate)
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players based on minMatches
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblBattingBowlingDetails"
teams <-c("Adelaide Strikers", "Brisbane Heat", "Hobart Hurricanes",
"Melbourne Renegades", "Melbourne Stars", "Perth Scorchers", "Sydney Sixers",
"Sydney Thunder")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
batsmen <- unique(df$batsman)
o <- NULL
n <- data.frame(name=character(0),matches=numeric(0),meanRuns=numeric(0),meanSR=numeric(0))
for (x in 1:length(batsmen)){
m <- filter(df,batsman==batsmen[x])
m <- mutate(m,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
m <- select(m,batsman,matches,meanRuns,meanSR)
n <- m[1,]
o <- rbind(o,n)
}
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
BBLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
BBLBatsmenRank
minMatches=50
teams <-c("Adelaide Strikers", "Brisbane Heat", "Hobart Hurricanes",
"Melbourne Renegades", "Melbourne Stars", "Perth Scorchers", "Sydney Sixers",
"Sydney Thunder")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
batsmen <- unique(df$batsman)
o <- NULL
n <- data.frame(name=character(0),matches=numeric(0),meanRuns=numeric(0),meanSR=numeric(0))
for (x in 1:length(batsmen)){
m <- filter(df,batsman==batsmen[x])
m <- mutate(m,matches=n(),meanRuns=mean(runs),meanSR=mean(strikeRate))
m <- select(m,batsman,matches,meanRuns,meanSR)
n <- m[1,]
o <- rbind(o,n)
}
# Reset to currDir
setwd(currDir)
# Select only players who have played 60 matches or more
p <- filter(o,matches >= minMatches)
BBLBatsmenRank <- arrange(p,desc(meanRuns),desc(meanSR))
BBLBatsmenRank
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players based on minMatches
c <- filter(b,matches >= minMatches)
BBLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
BBLBatsmenRank
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players based on minMatches
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players based on minMatches
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
# Create BBL dir - Batting/bowling details
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplBattingBowlingDetails"
teams <-c("Chennai Super Kings","Delhi Capitals", "Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants")
#Change dir
setwd(odir)
battingDF<-NULL
for(team in teams){
battingDetails <- NULL
val <- paste(team,"-BattingDetails.RData",sep="")
print(val)
tryCatch(load(val),
error = function(e) {
print("No data1")
setNext=TRUE
}
)
details <- battingDetails
battingDF <- rbind(battingDF,details)
}
df <- select(battingDF,batsman,runs,strikeRate)
b=summarise(group_by(df,batsman),matches=n(), meanRuns=mean(runs),meanSR=mean(strikeRate))
b[is.na(b)] <- 0
# Reset to currDir
setwd(currDir)
# Select only players based on minMatches
c <- filter(b,matches >= minMatches)
IPLBatsmenRank <- arrange(c,desc(meanRuns),desc(meanSR))
IPLBatsmenRank
remove.packages("yorkr")
library(yorkr)
# Create BBL dir - Batting/bowling details
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplBattingBowlingDetails"
rankIPLBatsmen(idir,odir,80)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblBattingBowlingDetails"
rankBBLBatsmen(idir,odir,50)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ntb/ntbMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ntb/ntbBattingBowlingDetails"
rankNTBBatsmen(idir,odir,20)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/psl/pslMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/psl/pslBattingBowlingDetails"
rankPSLBatsmen(idir,odir,40)
rankPSLBatsmen(idir,odir,30)
# Create T20 Men dir
source("./gpp2020R/T20Mutilities.R")
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20MenMatches"
rankT20Batsmen(idir,odir,40)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20MenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20BattingBowlingDetails"
rankT20Batsmen(idir,odir,40)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenBattingBowlingDetails"
rankT20Batsmen(idir,odir,40)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/wbb/wbbMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/wbb/wbbBattingBowlingDetails"
rankWBBBatsmen(idir,odir,20)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2020R')
system("R CMD build yorkr")
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.16.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.16.tar.gz")
library(yorkr)
# Create BBL dir - Batting/bowling details
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplBattingBowlingDetails"
rankIPLBatsmen(idir,odir,80)
rankIPLBowlers(idir,odir,50)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/bbl/bblBattingBowlingDetails"
rankBBLBatsmen(idir,odir,50)
rankBBLBowlers(idir,odir,40)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ntb/ntbMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ntb/ntbBattingBowlingDetails"
rankNTBBatsmen(idir,odir,20)
rankNTBBowlers(idir,odir,20)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/psl/pslMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/psl/pslBattingBowlingDetails"
rankPSLBatsmen(idir,odir,30)
rankPSLBowlers(idir,odir,25)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20MenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20BattingBowlingDetails"
rankT20Batsmen(idir,odir,40)
rankT20Bowlers(idir,odir,30)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenBattingBowlingDetails"
rankT20Batsmen(idir,odir,40)
rankT20Bowlers(idir,odir,30)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/t20/t20WomenBattingBowlingDetails"
rankT20Batsmen(idir,odir,30)
rankT20Bowlers(idir,odir,30)
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/wbb/wbbMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/wbb/wbbBattingBowlingDetails"
rankWBBBatsmen(idir,odir,20)
rankWBBBowlers(idir,odir,20)
# Create BBL dir - Batting/bowling details
idir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplMatches"
odir="/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2020R/ipl/iplBattingBowlingDetails"
rankIPLBatsmen(idir,odir,80)
rankIPLBowlers(idir,odir,50)
rankIPLBatsmen(idir,odir,50)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2020R')
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.16.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.16.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.17.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.17.tar.gz")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2020R')
runApp()
runApp('~/backup/software/cricket-package/yorkr-cricsheet/googlyPlusPlus2021')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/googlyPlusPlus2021')
