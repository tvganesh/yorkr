computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
anim_save("IPLBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="mo")
anim_save("IPLBattingMiddleOvers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
anim_save("IPLBattingDeathOvers.gif", animation = last_animation(), path = ".")
source("animation-functions.R")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
source("animation-functions.R")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="pp")
anim_save("IPLBowlingPowerPlay.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="mo")
anim_save("IPLBowlingMiddleOvers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="IPL",phase="do")
anim_save("IPLBowlingDeathOvers.gif", animation = last_animation(), path = ".")
computeRunSR(dateRange1,dateRange2,year,path=".",type="T20M")
anim_save("T20MBatting.gif", animation = last_animation(), path = ".")
computewicketsER(dateRange1,dateRange2,year,path=".",type="T20M")
anim_save("T20MBowling.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBattingDeathovers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBattingPowerPlay.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
anim_save("T20MBattingMiddleovers.gif", animation = last_animation(), path = ".")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
source("animation-functions.R")
computeRunsSRPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBattingDeathovers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="pp")
anim_save("T20MBowlingPowerPlay.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="mo")
anim_save("T20MBowlingMiddleovers.gif", animation = last_animation(), path = ".")
computeWicketsERPhase(dateRange1,dateRange2,year,path=".",type="T20M",phase="do")
anim_save("T20MBowlingDeathovers.gif", animation = last_animation(), path = ".")
rm(list=ls())
load("/Users/tvganesh/junk/gpp2021-newfiles-backup/ipl/iplAllMatchesAllTeams/allMatchesAllOpposition-Chennai Super Kings.RData")
View(matches)
View(matches)
batsman="SK Raina"
bowler="R Ashwin"
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
library(dplyr)
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
bowler1="R Ashwin"
batsman1="SK Raina"
a <- matches %>% filter(batsman==batsman1 & bowler==bowler1)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
install.packages("lpSolve")
library(lpSolve)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
load("/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/t20/t20WomenOptimization/T20W-MatchesDataFrame.RData")
#T20 Women
df1 <- select(t20MDF,batsman,runs)
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/t20/t20WomenOptimization")
dir="."
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenT20W.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersT20W.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
rm(list=ls())
library(lpSolve)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
library(yorkr)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
source("funcs.R")
batsman1=c("MS Dhoni","SK Raina","V Kohli")
bowler1=c("SL Malinga","R Ashwin","JJ Bumrah")
load("IPL-MatchesDataFrame.RData")
test2 <- function(batsman1,bowler1){
df2 <- NULL
for(i in 1:length(batsman1)){
for(j in 1:length(bowler1)){
a <- bowlerVsBatsmanPerf(t20MDF,batsman1[i],bowler1[j])
df2 <- rbind(df2,a)
}
}
df2
}
b=test2(batsman1,bowler1)
load("/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/linearprog/linearprog/IPL-MatchesDataFrame.RData")
b=test2(batsman1,bowler1)
b
a
test2 <- function(batsman1,bowler1){
df2 <- NULL
for(i in 1:length(batsman1)){
for(j in 1:length(bowler1)){
a <- bowlerVsBatsmanPerf(t20MDF,batsman1[i],bowler1[j])
df2 <- rbind(df2,a)
}
}
df2
}
b=test2(batsman1,bowler1)
a
b
df2%>% arrange(bowler1)
b%>% arrange(bowler1)
dir="."
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/bbl/bblOptimization")
#######BBL
load("BBL-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenBBL.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersBBL.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/ntb/ntbOptimization")
#######NTB
load("NTB-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenNTB.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersNTB.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/psl/pslOptimization")
#######PSL
load("PSL-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenPSL.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersPSL.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/wbb/wbbOptimization")
#######WBB
load("WBB-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenWBB.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersWBB.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/cpl/cplOptimization")
#######CPL
load("CPL-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenCPL.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersCPL.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1/ssm/ssmOptimization")
#######SSM
load("SSM-MatchesDataFrame.RData")
#######SSM
load("SSM-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmenSSM.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlersSSM.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-1')
getwd()
getwd()
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.31.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.31.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.31.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.31.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.31.tar.gz")
version
version
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-2')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-2')
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr26Jan2022/yorkr")
setwd("..")
system("R CMD build yorkr")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr31Mar2022")
setwd("..")
system("R CMD build yorkr")
getwd()
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr31Mar2022")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.32.tar.gz")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr26Jan2022/yorkr")
setwd("..")
system("R CMD build yorkr")
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-2")
rsconnect::deployApp(appName="gpp2022-2")
library(yorkr)
rsconnect::deployApp(appName="gpp2022-2")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
rsconnect::deployApp(appName="gpp2022-2")
rsconnect::deployApp(appName="gpp2022-2")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr5Apr2022/yorkr")
library(yorkr)
setwd("~/junk")
convertAllYaml2RDataframesT20(ipl,iplMatches)
getwd()
convertAllYaml2RDataframesT20("ipl","iplMatches")
load("/Users/tvganesh/junk/iplMatches/Rajasthan Royals-Lucknow Super Giants-2022-04-10.RData")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr5Apr2022/yorkr")
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.33.tar.gz")
library(yorkr)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-2')
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr5Apr2022/yorkr")
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.33.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.33.tar.gz")
install.packages("yorkr")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2022-2")
rsconnect::deployApp(appName="gpp2022-2")
getwd()
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.35.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.35.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.35.tar.gz")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.35.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.35.tar.gz")
library(yorkr)
library(yorkr)
library(dplyr)
load("./embed/IPL-MatchesDataFrame.RData")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr25Dec2022/yorkr/R")
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr25Dec2022/yorkr/R")
setwd("~/backup/software/cricket-package/yorkr-cricsheet/winprobability")
library(yorkr)
library(dplyr)
load("./embed/IPL-MatchesDataFrame.RData")
load("./embed/T20M-MatchesDataFrame.RData")
load("./embed/T20W-MatchesDataFrame.RData")
load("./embed/BBL-MatchesDataFrame.RData")
load("./embed/CPL-MatchesDataFrame.RData")
load("./embed/IPL-MatchesDataFrame.RData")
load("./embed/T20M-MatchesDataFrame.RData")
t20DF=NULL
load("./embed/IPL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/T20M-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/T20W-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/BBL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/CPL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/PSL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/NTB-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/SSM-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/WBB-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
batsman = bowler = runs = fours = totalRuns = ballsFaced = wicketPlayerOut = NULL
sixes = fours = timesOut = NULL
batsman = unique(t20DF$batsman)
batsman = distinct(t20DF$batsman)
bowler = unique(t20DF$bowler)
View(t20DF)
View(t20DF)
library(yorkr)
library(dplyr)
#allBatsmenIPL <-readRDS("./embeddings_data/all-batsmenT20M.rds")
#allBowlersIPL <-readRDS("./embeddings_data/all-bowlersT20M.rds")
#load("./embeddings_data/T20M-MatchesDataFrame.RData")
t20DF=NULL
load("./embed/IPL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/T20M-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/T20W-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/BBL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/CPL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/PSL-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/NTB-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/SSM-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
load("./embed/WBB-MatchesDataFrame.RData")
t20DF=rbind(t20DF,t20MDF)
batsman = bowler = runs = fours = totalRuns = ballsFaced = wicketPlayerOut = NULL
sixes = fours = timesOut = NULL
allBatsmen = unique(t20DF$batsman)
allBowlers = unique(t20DF$bowler)
a <- filter(t20MDF,batsman %in% allBatsmen & bowler %in% allBowlers)
View(a)
b <- select(a, batsman, bowler, runs)
c <- b %>% group_by(batsman,bowler) %>% summarize(ballsFaced = n(), totalRuns = sum(runs))
d <- b %>% group_by(batsman,bowler)  %>%
mutate(fours=(runs>=4 & runs <6)) %>%
filter(fours==TRUE) %>% summarise(fours=n())
d1 <- left_join(c,d,by=c(batsman,bowler))
e <- b %>% group_by(batsman,bowler)  %>%
mutate(sixes=(runs ==6)) %>%
filter(sixes == TRUE) %>% summarise(sixes=n())
e1 = left_join(d1,e,by=c(batsman,bowler))
f1 = e1[e1$totalRuns != 0,]
g = select(f1,batsman,bowler,totalRuns,ballsFaced,fours,sixes)
names(g) <- c('batsman1','bowler1','totalRuns','ballsFaced','fours','sixes')
h <- select(g,batsman1,bowler1,totalRuns)
i <- select(g,batsman1,bowler1,ballsFaced,fours,sixes)
i[is.na(i)] <- 0
View(i)
write.csv(h,"output/batsmanVsBowlerT20ME.csv",row.names=FALSE)
write.csv(i,"batsmanVsBowlerT20All.csv",row.names=FALSE)
View(a)
View(a)
batsman %in% allBatsmen
t20DF$batsman
t20DF$batsman %in$
t20DF$batsman %in$ allBatsmen
t20DF$batsman
t20DF$batsman %in% allBatsmen
c <- t20DF %>% group_by(batsman,bowler) %>% summarize(ballsFaced = n(), totalRuns = sum(runs))
d <- t20DF %>% group_by(batsman,bowler)  %>%
mutate(fours=(runs>=4 & runs <6)) %>%
filter(fours==TRUE) %>% summarise(fours=n())
d1 <- left_join(c,d,by=c(batsman,bowler))
View(d1)
View(d1)
e <- t20DF %>% group_by(batsman,bowler)  %>%
mutate(sixes=(runs ==6)) %>%
filter(sixes == TRUE) %>% summarise(sixes=n())
e1 = left_join(d1,e,by=c(batsman,bowler))
f1 = e1[e1$totalRuns != 0,]
g = select(f1,batsman,bowler,totalRuns,ballsFaced,fours,sixes)
View(g)
names(g) <- c('batsman1','bowler1','totalRuns','ballsFaced','fours','sixes')
h <- select(g,batsman1,bowler1,totalRuns)
i <- select(g,batsman1,bowler1,ballsFaced,fours,sixes)
i[is.na(i)] <- 0
write.csv(h,"batsmanVsBowlerT20ME.csv",row.names=FALSE)
write.csv(i,"batsmanVsBowlerT20All.csv",row.names=FALSE)
View(h)
View(i)
write.csv(h,"batsmanVsBowlerE.csv",row.names=FALSE)
write.csv(i,"batsmanVsBowlerAll.csv",row.names=FALSE)
getwd(0)
getwd()
write.csv(h,"batsmanVsBowlerE.csv",row.names=FALSE)
write.csv(i,"batsmanVsBowlerAll.csv",row.names=FALSE)
View(h)
View(i)
df6=read.csv("embed.csv",row.names = FALSE)
df6=read.csv("embed.csv")
View(df6)
View(df6)
df7=select(df6,batsman,bowler,'normalizedBallsFaced','normalizedFours','normalizedSixes')
View(df7)
df7=select(df6,batsman,bowler,'normalizedBallsFaced','normalizedFours','normalizedSixes','totalRuns')
trainTestSplit <- function(df,trainPercent,seed1){
## Sample size percent
samp_size <- floor(trainPercent/100 * nrow(df))
## set the seed
set.seed(seed1)
idx <- sample(seq_len(nrow(df)), size = samp_size)
idx
}
train_idx <- trainTestSplit(df,trainPercent=80,seed=5)
train_idx <- trainTestSplit(df7,trainPercent=80,seed=5)
train <- df7[train_idx, ]
fit=lm(totalRuns~.,data=train)
summary(fit)
test <- df7[-train_idx, ]
test <- df7[-train_idx, ]
fit=lm(totalRuns~.,data=train)
summary(fit)
rsquared=Rsquared(fit,test,test$totalRuns)
Rsquared <- function(lmfit,newdf,y){
yhat <- predict(lmfit,newdata=newdf)
RSS <- sum((y - yhat)^2)
TSS <- sum((y - mean(y))^2)
rsquared <-1 - (RSS/TSS)
rsquared
}
rsquared=Rsquared(fit,test,test$totalRuns)
sprintf("R-squared for multi-variate regression (crimes.csv)  is : %f", rsquared)
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr25Dec2022/yorkr")
setwd("..")
system("R CMD build yorkr")
install.packages("devtools")
library(devtools)
library(usethis)
system("R CMD build yorkr")
getwd()
setwd("..")
system("R CMD build yorkr")
install.packages("~/backup-macbook/software/cricket-package/yorkrPackage/yorkr04Jan2023/yorkr_0.0.36.tar.gz", repos = NULL, type = "source")
library(yorkr)
shiny::runApp('~/backup-macbook/software/cricket-package/yorkr-cricsheet/gpp2022-6')
library(glmnet)
library(ranger)
runApp('~/backup-macbook/software/cricket-package/yorkr-cricsheet/gpp2022-6')
load("iplMatches//Chennai Super Kings-Deccan Chargers-2009-04-27.RData")
setwd("/Volumes/tvganesh/backup-mini/software/cricket-package/yorkr-cricsheet/winprobability")
load("iplMatches//Chennai Super Kings-Deccan Chargers-2009-04-27.RData")
team1Size=0
requiredRuns=0
# Read batsman, bowler vectors
batsmanMap=readRDS("batsmanMap.rds")
bowlerMap=readRDS("bowlerMap.rds")
teamA=match$team[grep("1st.0.1",match$ball)]
# Filter the performance of team1
a <-filter(match,team==teamA)
#Balls in team 1's innings
ballsIn1stInnings= dim(a)[1]
library(dplyr)
team1Size=0
requiredRuns=0
# Read batsman, bowler vectors
batsmanMap=readRDS("batsmanMap.rds")
bowlerMap=readRDS("bowlerMap.rds")
teamA=match$team[grep("1st.0.1",match$ball)]
# Filter the performance of team1
a <-filter(match,team==teamA)
#Balls in team 1's innings
ballsIn1stInnings= dim(a)[1]
shiny::runApp('/Volumes/tvganesh/backup-mini/software/cricket-package/yorkr-cricsheet/gpp2022-6')
