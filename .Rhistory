inc <- del -9
# Use pattern with suffix .1,.2,.3 etc
pattern = paste(s[i],"\\D*.","[",inc,"]$",sep="")
}
overset <- filter(match,grepl(pattern,rnames))
#Transpose
over <-as.data.frame(t(overset))
# Set column names from 1st row
names(over) <- lapply(over[1, ], as.character)
#Transpose
over <-as.data.frame(t(overset))
# Set column names from 1st row
names(over) <- lapply(over[1, ], as.character)
# Remove 1st row
over <- over[-1, ]
names(over)=gsub(s[i],"",names(over))
#If the over had more than 9 balls then the suffix *.1,*.2 have to be removed also
if(gt9){
val = paste(".",inc,sep="")
names(over)=gsub(val,"",names(over))
}
#Check the number of deliveries in the over
d <- dim(over)
if(d[2] == 0){
next
} else if(d[2] >=10){
print("Greater than equal to 10 cols!")
#print(d)
#print(names(over))
#break
}
getwd()
setwd("~/backup-mini/software/cricket-package/yorkrPackage/yorkr10Mar2023/yorkr")
setwd("..")
system("R CMD build yorkr")
install.packages("yorkr_0.0.40.tar.gz",repos = NULL, type="source")
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12")
#source("conv.R")
convertAllYaml2RDataframesT20("ipl","iplMatches")
library(yorkr)
#source("conv.R")
convertAllYaml2RDataframesT20("ipl","iplMatches")
getwd()
setwd("..")
system("R CMD build yorkr")
install.packages("yorkr_0.0.40.tar.gz",repos = NULL, type="source")
library(yorkr)
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12")
source("IPLutilities.R")
#source("conv.R")
convertAllYaml2RDataframesT20("ipl","iplMatches")
#source("conv.R")
convertAllYaml2RDataframesT20("ipl","iplMatches")
install.packages("yorkr_0.0.40.tar.gz",repos = NULL, type="source")
install.packages("yorkr_0.0.40.tar.gz",repos = NULL, type="source")
system("R CMD build yorkr")
setwd("~/backup-mini/software/cricket-package/yorkrPackage/yorkr10Mar2023/yorkr")
system("R CMD build yorkr")
getwd()
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.40.tar.gz")
system("R CMD check --as-cran yorkr_0.0.40.tar.gz")
library(ggplot2)
library(gridExtra)
library(rpart)
system("R CMD check --as-cran yorkr_0.0.40.tar.gz")
parse <- function(match,s,ateam,delivery,meta) {
team=ball=totalRuns=rnames=batsman=bowler=nonStriker=NULL
byes=legbyes=noballs=wides=nonBoundary=penalty=runs=NULL
extras=wicketFielder=wicketKind=wicketPlayerOut=NULL
gt9=FALSE
print("new code")
# Create an empty data frame
overs <- data.frame(ball=character(),team=character(),batsman=character(),
bowler=character(),nonStriker=character(),byes=character(),
legbyes=character(), noballs=character(), wides=character(),
nonBoundary=character(), penalty=character(),
runs=character(),extras=character(),totalRuns=character(),
wicketFielder=character(), wicketKind=character(),
wicketPlayerOut=character(),replacementIn=factor(),
replacementOut=character(),replacementReason=character(),replacementTeam=character(),
date=character(),
matchType=character(),
overs=character(),venue=character(),team1=character(),team2=character(),
winner=character(),result=character())
# Loop through all deliveries one by one.
for(i in 1:length(delivery)){
#cat("i=",i,"\n") # Debug
# Filter rows based on the delivery(ball) as overset
# Note if an over has more than 10 deliveries then the deliveries are
# 1st.0,1.batsman, 1st.0.2.batsman,..., 1st.0.9.batsman, 1st.0.1.batsman.1,
# 1st.0.1.batsman.2 and so on.
#filter(match,grepl("1st.0.1.\\D*$",rnames))
#1      1st.0.1.batsman Shahzaib Hasan
#2       1st.0.1.bowler      JA Morkel
#3  1st.0.1.non_striker   Imran Farhat
#4 1st.0.1.runs.batsman              1
#5  1st.0.1.runs.extras              0
#6   1st.0.1.runs.total              1
#filter(match,grepl("1st.0.1.\\D*.\\d{1}$",rnames))
#1      1st.0.1.batsman.1   Imran Farhat
#2       1st.0.1.bowler.1      JA Morkel
#3  1st.0.1.non_striker.1 Shahzaib Hasan
#4 1st.0.1.runs.batsman.1              1
#5  1st.0.1.runs.extras.1              0
#6   1st.0.1.runs.total.1              1
# Assume in the worst case there are 15 deliveries
# Compute delivery
del <- i %%  15 # Assuming max of 15 deliveries
# For deliveries 1-9
if((del >=1) && (del<= 9)){
pattern = paste(s[i],"\\D*$",sep="")
} else if(del > 9){ # deliveries 10-15
# Find increment above 9
gt9=TRUE
inc <- del -9
# Use pattern with suffix .1,.2,.3 etc
pattern = paste(s[i],"\\D*.","[",inc,"]$",sep="")
}
overset <- filter(match,grepl(pattern,rnames))
#Transpose
over <-as.data.frame(t(overset))
# Set column names from 1st row
names(over) <- lapply(over[1, ], as.character)
# Remove 1st row
over <- over[-1, ]
names(over)=gsub(s[i],"",names(over))
#If the over had more than 9 balls then the suffix *.1,*.2 have to be removed also
if(gt9){
val = paste(".",inc,sep="")
names(over)=gsub(val,"",names(over))
}
#Check the number of deliveries in the over
d <- dim(over)
if(d[2] == 0){
next
} else if(d[2] >=10){
print("Greater than equal to 10 cols!")
#print(d)
#print(names(over))
#break
}
#Replace extras. with "" for the extras before doing diff - Added 27 Oct 2021
names(over)=gsub("extras\\.","",names(over))
cols<-names(over)
cols1=c("batsman","bowler","non_striker","byes","legbyes","noballs","wides","runs.non_boundary","penalty",
"runs.batsman","runs.extras","runs.total","wicket.fielders","wicket.kind","wicket.player_out",
"replacements.match.in", "replacements.match.out","replacements.match.team","replacements.match.reason")
# Get the missing columns
a <- setdiff(cols1,cols)
if(length(a) != (length(cols1) - length(cols))){
print("New columns added")
break
}
# Create a dataframe with the missing columns
over1=data.frame(rbind(a))
# Set column names
names(over1) <- lapply(over1[1, ], as.character)
over1 <- over1[-1, ]
over1 <- data.frame(lapply(over1, as.character), stringsAsFactors=FALSE)
over1[1,] <- rep(0,times=length(a))
newover <- cbind(over,over1)
newover$ball=gsub("\\\\.","",s[i])
newover$team = ateam
newover <- cbind(newover,meta)
# Convert all columns to character
newover <- data.frame(lapply(newover, as.character), stringsAsFactors=FALSE)
# Stack the overs
overs <- rbind(overs,newover)
}
overs
}
library(yaml)
library(dplyr)
pth="ipl/1359475.yaml"
# Load yaml file
a <- yaml.load_file(pth)
# Load yaml file
a <- yaml.load_file(pth)
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12")
# Load yaml file
a <- yaml.load_file(pth)
# This is a temporary change.
# Removing elements of Players,Registry and balls per over from yaml file
a[[2]][['players']] <- NULL #Players
a[[2]][['registry']] <- NULL #Registry
a[[2]][['balls_per_over']] <- NULL  #balls per over
# Cast as data frame for easy processing
tryCatch(b <- as.data.frame(a),
error = function(e) {
print("Error!")
eFile <- files[iii]
errorFile <- paste(targetDirMen,"/","errors.txt",sep="")
write(eFile,errorFile,append=TRUE)
}
)
sz <- dim(b)
# Gather the meta information
meta <- select(b,info.dates,info.match_type,info.overs, info.venue,
info.teams,info.gender)
names(meta) <- c("date","matchType","overs","venue","team1","gender")
# Check if there was a winner or if there was no result (tie,draw)
if(!is.null(b$info.outcome.winner)){
meta$winner <- b$info.outcome.winner
meta$result <- "NA"
} else if(!is.null(b$info.result)){
meta$winner <- "NA"
meta$result <- b$info.result
} else if(!is.null(b$info.outcome.result)){
meta$winner <- "NA"
meta$result <- b$info.outcome.result
}
meta$team2 = meta[2,5]
meta <- meta[1,]
#Reorder columns
meta <- select(meta,date,matchType,overs,venue,team1,team2,winner,result,gender)
# Remove the innings and deliveries from the column names
names(b) <-gsub("innings.","",names(b))
names(b) <- gsub("deliveries.","",names(b))
# Fix for changed order of columns-28 Apr 2020
idx = which(names(b) == "1st.team") # Search for column name 1st.team
# Select the column after that which includes ball-by-ball detail
idx=idx+1
m <- b[1,idx:sz[2]]
#Transpose to the details of the match
match <- t(m)
rnames <- rownames(match)
match <- as.data.frame(cbind(rnames,match))
# Set the number of overs to 50 for ODI matches
numOver <- seq(from=0,to=20,by=1)
# Create string of delivery in each over upto delivery 16 in case of no balls,
# wides etc.
# Note: The over can be more than .6 when you have no balls, wides etc
d <- c(".1",".2",".3",".4",".5",".6",".7",".8",".9",".1",".1",
".1",".1",".1",".1")
m <- 1
# Create a vector of deliveries from 0 to 50 by concatenating string
delivery <- NULL
for(k in 1:length(numOver)){
for(l in 1:length(d)){
delivery[m] <- paste(numOver[k],d[l],sep="")
m=m+1
}
}
#Create string for 1st team
print("first loop")
s <- paste("1st.",delivery,"\\.",sep="")
team1 <- b$`1st.team`[1]
# Parse the yaml file over by over and store as a row of data
overs1 <- parse(match,s,team1,delivery,meta)
# Create string for 2nd team
print("second loop")
s1 <- paste("2nd.",delivery,"\\.",sep="")
team2 <- b$`2nd.team`[1]
overs2 <- parse(match,s1,team2,delivery,meta)
# Row bind the 1dst
overs <- rbind(overs1,overs2)
colList=list("batsman"="batsman","bowler"="bowler","non_striker"="nonStriker","runs.batsman" ="runs",
"runs.extras" ="extras","runs.total"="totalRuns","byes"="byes","legbyes"="legbyes","noballs"="noballs",
"wides"="wides","runs.non_boundary"="nonBoundary","penalty" ="penalty","wicket.fielders"="wicketFielder",
"wicket.kind"="wicketKind","wicket.player_out" ="wicketPlayerOut",
"replacements.match.in"="replacementIn","replacements.match.out"="replacementOut",
"replacements.match.reason"="replacementReason","replacements.match.team"="replacementTeam",
"ball"="ball","team"="team","date"="date","matchType"="matchType","overs" ="overs",
"venue"="venue","team1" ="team1","team2" ="team2", "winner"="winner","result"="result",
"gender"="gender")
# Get the column names for overs
cols <- names(overs)
newcols <- NULL
for(i in 1: length(cols)){
newcols <- c(newcols, colList[[cols[i]]])
}
# Rename the columns
names(overs) <- newcols
overs <- select(overs, ball,team,batsman,bowler,nonStriker,
byes,legbyes,noballs,
wides,nonBoundary,penalty, runs,
extras,totalRuns,wicketFielder,
wicketKind,wicketPlayerOut,
replacementIn, replacementOut, replacementReason,
replacementTeam,date,matchType,overs,venue,team1,team2,winner,result,gender)
# Change factors to appropiate type
overs$byes <- as.numeric(as.character(overs$byes))
overs$legbyes <- as.numeric(as.character(overs$legbyes))
overs$wides <- as.numeric(as.character(overs$wides))
overs$noballs <- as.numeric(as.character(overs$noballs))
overs$nonBoundary <- as.numeric(as.character(overs$nonBoundary))
overs$penalty <- as.numeric(as.character(overs$penalty))
overs$runs <- as.numeric(as.character(overs$runs))
overs$extras <- as.numeric(as.character(overs$extras))
overs$totalRuns <- as.numeric(as.character(overs$totalRuns))
overs$date = as.Date(overs$date)
overs$overs <- as.numeric(as.character(overs$overs))
# Add missing elements
overs[overs$wicketFielder == 0,]$wicketFielder="nobody"
overs[overs$wicketKind == 0,]$wicketKind="not-out"
overs[overs$wicketPlayerOut==0,]$wicketPlayerOut ="nobody"
sapply(overs,class)
teams <- as.character(unique(overs$team))
filename <- paste(meta$team1,"-",meta$team2,"-",meta$date,".",
"RData",sep="")
# Write men and women in separate folders
gender=overs$gender
if(gender[1] =="male"){
to <- paste(targetDirMen,"/",filename,sep="")
}
else{
to <- paste(targetDirWomen,"/",filename,sep="")
}
save2 <- function(dir=".",odir="."){
teams <-c("Chennai Super Kings","Delhi Capitals","Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab","Punjab Kings", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants","Lucknow Super Giants","Gujarat Titans")
matches <- NULL
#Create all combinations of teams
for(i in seq_along(teams)){
for(j in seq_along(teams)){
if(teams[i] != teams[j]){
cat("Team1=",teams[i],"Team2=",teams[j],"\n")
tryCatch(matches <- getAllMatchesBetweenTeams(teams[i],teams[j],dir=dir,save=TRUE,odir=odir),
error = function(e) {
print("No matches")
}
)
}
}
matches <- NULL
}
}
save2("iplMatches","iplMatches2Teams")
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12")
save2 <- function(dir=".",odir="."){
teams <-c("Chennai Super Kings","Delhi Capitals","Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab","Punjab Kings", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants","Lucknow Super Giants","Gujarat Titans")
matches <- NULL
#Create all combinations of teams
for(i in seq_along(teams)){
for(j in seq_along(teams)){
if(teams[i] != teams[j]){
cat("Team1=",teams[i],"Team2=",teams[j],"\n")
tryCatch(matches <- getAllMatchesBetweenTeams(teams[i],teams[j],dir=dir,save=TRUE,odir=odir),
error = function(e) {
print("No matches")
}
)
}
}
matches <- NULL
}
}
save2("iplMatches","iplMatches2Teams")
save2("./iplMatches","./iplMatches2Teams")
getwd()
teams <-c("Chennai Super Kings","Delhi Capitals","Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab","Punjab Kings", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants","Lucknow Super Giants","Gujarat Titans")
matches <- NULL
dir="iplMatches"
odir="."
teams <-c("Chennai Super Kings","Delhi Capitals","Deccan Chargers","Delhi Daredevils",
"Kings XI Punjab","Punjab Kings", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants","Lucknow Super Giants","Gujarat Titans")
matches <- NULL
#Create all combinations of teams
for(i in seq_along(teams)){
for(j in seq_along(teams)){
if(teams[i] != teams[j]){
cat("Team1=",teams[i],"Team2=",teams[j],"\n")
tryCatch(matches <- getAllMatchesBetweenTeams(teams[i],teams[j],dir=dir,save=TRUE,odir=odir),
error = function(e) {
print("No matches")
}
)
}
}
matches <- NULL
}
getwd()
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12/iplMatches")
team1="Chennai Super Kings"
team2="Lucknow Super Giants"
# Create 2 filenames with both combinations of team1 and team2
d1 <- paste(team1,"-",team2,"*",sep="")
d2 <- paste(team2,"-",team1,"*",sep="")
path1=paste(dir,"/",d1,sep="")
path2=paste(dir,"/",d2,sep="")
# Capture both combinations
fl1 <- Sys.glob(path1)
fl2 <- Sys.glob(path2)
dir
path1
# Capture both combinations
fl1 <- Sys.glob(path1)
fl2 <- Sys.glob(path2)
fl3 <-c(fl1,fl2)
if(length(fl3) != 0){
# Create a data frame with all matches
matches <- NULL
for(i in 1:length(fl3)){
# Add try-catch to handle issues
tryCatch({
load(fl3[i])
matches <- rbind(matches,overs)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
b <- paste(odir,"/",team1,"-",team2,"-allMatches.RData",sep="")
if(save){
save(matches,file=b)
}
matches
}
# Create a data frame with all matches
matches <- NULL
# Add try-catch to handle issues
tryCatch({
load(fl3[i])
matches <- rbind(matches,overs)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
path1
getwd()
setwd("..")
# Create 2 filenames with both combinations of team1 and team2
d1 <- paste(team1,"-",team2,"*",sep="")
d2 <- paste(team2,"-",team1,"*",sep="")
path1=paste(dir,"/",d1,sep="")
path2=paste(dir,"/",d2,sep="")
# Capture both combinations
fl1 <- Sys.glob(path1)
fl2 <- Sys.glob(path2)
fl3 <-c(fl1,fl2)
if(length(fl3) != 0){
# Create a data frame with all matches
matches <- NULL
for(i in 1:length(fl3)){
# Add try-catch to handle issues
tryCatch({
load(fl3[i])
matches <- rbind(matches,overs)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
b <- paste(odir,"/",team1,"-",team2,"-allMatches.RData",sep="")
if(save){
save(matches,file=b)
}
matches
}
# Create a data frame with all matches
matches <- NULL
for(i in 1:length(fl3)){
# Add try-catch to handle issues
tryCatch({
load(fl3[i])
matches <- rbind(matches,overs)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
setwd("~/backup-mini/software/cricket-package/yorkr-cricsheet/cron12")
source("IPLutilities.R")
setwd("~/Downloads")
convertAllYaml2RDataframesT20("ipl","iplMatches")
library(yorkr)
convertAllYaml2RDataframesT20("ipl","iplMatches")
saveAllMatchesBetween2IPLTeams("iplMatches","iplMatches2Teams")
saveAllMatchesAllOppositionIPLT20("iplMatches","iplAllMatchesAllTeams")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBowlingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBatsmen("iplBattingBowlingDetails")
getIPLBowlers("iplBattingBowlingDetails")
setwd("~/Downloads/iplBattingBowlingDetails")
teamNames <- list("Chennai Super Kings","Deccan Chargers","Delhi Capitals", "Delhi Daredevils",
"Kings XI Punjab","Punjab Kings", 'Kochi Tuskers Kerala',"Kolkata Knight Riders",
"Mumbai Indians", "Pune Warriors","Rajasthan Royals",
"Royal Challengers Bangalore","Sunrisers Hyderabad","Gujarat Lions",
"Rising Pune Supergiants","Lucknow Super Giants","Gujarat Titans")
saveAllT20BattingDetails(teamNames,dir=".",odir=".",type="IPL",save=TRUE)
saveAllT20BowlingDetails(teamNames,dir=".",odir=".",type="IPL",save=TRUE)
saveAllT20MatchesAsDF(teamNames,dir=".",odir=".",type="IPL",save=TRUE)
load("IPL-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
setwd("~/Downloads/iplMatches")
saveAllT20MatchesAsDF(teamNames,dir=".",odir=".",type="IPL",save=TRUE)
load("IPL-MatchesDataFrame.RData")
df1 <- select(t20MDF,batsman,runs)
a1 <- df1 %>% distinct(batsman)
a1$batsman = as.character(a1$batsman)
allBatsmen <- a1[order(a1$batsman),]
batsmenFile = paste(dir,"/all-batsmen.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
dir="."
batsmenFile = paste(dir,"/all-batsmen.rds",sep="")
saveRDS(allBatsmen, file=batsmenFile)
load("IPL-MatchesDataFrame.RData")
df1 <- select(t20MDF,bowler)
a1 <- df1 %>% distinct(bowler)
a1$bowler = as.character(a1$bowler)
allBowlers <- a1[order(a1$bowler),]
bowlersFile = paste(dir,"/","all-bowlers.rds",sep="")
saveRDS(allBowlers, file=bowlersFile)
getwd()]
getwd()
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.40.tar.gz")
