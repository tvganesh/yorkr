fl
i=1
ls
ls()
rm(list=ls())
ls()
name="A Kumble"
team="Royal Challengers Bangalore"
a <- paste(dir,"/","*",team,"*",sep="")
dir="./ipl/iplMatches"
a <- paste(dir,"/","*",team,"*",sep="")
fl <- Sys.glob(a)
print(length(fl))
ls()
i=1
load(fl[i])
ls()
overs
#print(i)
cat("size1=",dim(overs),"\n")
details <- bowlerDeliveryWickets(overs,team,name)
library(yorkr)
runApp()
runApp()
library(yorkr)
runApp()
library(yorkr)
runApp()
library(yorkr)
runApp()
library(yorkr)
runApp()
library(yorkr)
runApp()
runApp()
library(yorkr)
runApp()
library(yorkr)
runApp()
rm(list=ls())
rm(list=ls())
ls()
dir="./ipl/iplMatches"
name="A Kumble"
team="Royal Challengers Bangalore"
a <- paste(dir,"/","*",team,"*",sep="")
fl <- Sys.glob(a)
print(length(fl))
i=1
load(fl[i])
ls()
overs
match <- overs
#a <-filter(match,opposition!=theTeam)
#b <- filter(match,grepl(name,bowler))
b=match[match$bowler==name,]
b
dim(b)
names(b)
b$overs
b$over
names(b)
b$over
View(b)
c <- filter(b,wicketPlayerOut != "nobody")
View(c)
View(c)
View(b)
dim(b)
b$delivery=seq(1:dim(b)[1])
View(b)
c <- filter(b,wicketPlayerOut != "nobody")
View(c)
dim(c)
c$wicketNo <- seq(1:dim(c)[1])
d <- select(c,bowler,delivery,wicketNo,date)
View(d)
library(yorkr)
runApp()
runApp()
runApp('../gpp2021-1')
runApp('../gpp2021-1')
runApp('../gpp2021-1')
runApp('../gpp2021-1')
runApp('../gpp2021-1')
rm(list=ls())
match="Chennai Super Kings-Deccan Chargers-2008-05-06.RData"
IPLmatch <- paste("./ipl/iplMatches/", match,".RData",sep="")
ls()
load(IPLmatch)
rm(list=ls())
match="Chennai Super Kings-Deccan Chargers-2008-05-06"
IPLmatch <- paste("./ipl/iplMatches/", match,".RData",sep="")
IPLmatch
load(IPLmatch)
ls()
matchDF <- overs
match=overs
theTeam="Chennai Super Kings"
a <-filter(match,team!=theTeam)
# Compute the maidens,runs conceded and overs for the bowlers
a1 <- unlist(strsplit(a$ball[1],"\\."))
# Create a string for substitution 1st or 2nd
a2 <- paste(a1[1],"\\.",sep="")
# only wides and noballs need to be included with runs for bowlers.
# Note: byes and legbyes should not be included
b <-  a %>%
select(bowler,ball,noballs,wides,runs,wicketKind,wicketPlayerOut) %>%
#mutate(over=gsub("1st\\.","",ball)) %>%
mutate(over=gsub(a2,"",ball)) %>%
mutate(over=gsub("\\.\\d+","",over))
#Calculate the number of maiden overs
c <- summarise(group_by(b,bowler,over),sum(runs,wides,noballs))
names(c) <- c("bowler","over","runsConceded")
d <-summarize(group_by(c,bowler),maidens=sum(runsConceded==0))
#Compute total runs conceded (runs_wides+noballs)
e <- summarize(group_by(c,bowler),runs=sum(runsConceded))
# Calculate the number of overs bowled by each bwler
f <- select(c,bowler,over)
g <- summarise(group_by(f,bowler),overs=length(unique(over)))
print("wicketruns1")
#Compute number of wickets
h <- b %>%
select(bowler,wicketKind,wicketPlayerOut) %>%
filter(wicketPlayerOut != "nobody")
i <- summarise(group_by(h,bowler),wickets=length(unique(wicketPlayerOut)))
#Join the over & maidens
j <- full_join(g,d,by="bowler")
# Add runs
k <- full_join(j,e,by="bowler")
# Add wickets
l <- full_join(k,i,by="bowler")
l$wickets = as.character(l$wickets)
print(l$wickets)
if(sum(is.na(l$wickets)) != 0){
l[is.na(l$wickets),]$wickets=0
}
if(sum(is.na(l$wickets)) != 0){
l[is.na(l$wickets),]$wickets=0
}
l
is.na(l$wickets)
l[is.na(l$wickets),]$wickets=0
as.numeric(l$wicket)
l
l$wickets=as.numeric(l$wickets)
l
if(sum(is.na(l$wickets)) != 0){
l[is.na(l$wickets),]$wickets=0
}
l
# Set NAs to 0
l$wickets=as.numeric(l$wickets)
if(sum(is.na(l$wickets)) != 0){
l[is.na(l$wickets),]$wickets=0
}
# Plot or ourput data frame
if(plot == TRUE){
plot.title <- paste(theTeam,"Wicket vs Runs conceded (against",opposition,")")
p <- ggplot(data=l,aes(x=factor(wickets),y=runs,fill=factor(wickets))) +
facet_grid(. ~ bowler,scales = "free_x", space = "free_x") +
geom_bar(stat="identity") +
xlab("Number of wickets") + ylab("Total runs conceded") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),"")))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(plot.title = element_text(size=14,margin=margin(10)))
p
}
library(yorkr)
runApp('../gpp2021-1')
library(yorkr)
runApp('../gpp2021-1')
runApp('../gpp2021-1')
library(yorkr)
runApp('../gpp2021-1')
runApp('../gpp2021-1')
setwd("~/Downloads/ipl")
setwd("..")
convertAllYaml2RDataframesT20("ipl","iplMatches")
getwd()
convertAllYaml2RDataframesT20("ipl","iplMatches")
library(yorkr)
convertAllYaml2RDataframesT20("ipl","iplMatches")
library(yorkr)
getwd()
cd ipl
setwd("ipl")
ls
ls()
dir()
convertYaml2RDataframeT20("980991.yaml",".")
library(yorkr)
convertYaml2RDataframeT20("980991.yaml",".")
ls
library(yorkr)
convertYaml2RDataframeT20("980991.yaml",".")
getwd()
setwd("..")
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.20.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.20.tar.gz")
library(yorkr)
library(yorkr)
getwd()
dir
didir()
dir()
system("R CMD build yorkr")
system("R CMD check --as-cran yorkr_0.0.20.tar.gz")
system("R CMD check --force-multiarch yorkr_0.0.20.tar.gz")
getwd()
setwd("~/Downloads")
saveAllMatchesBetween2IPLTeams("iplMatches","iplMatches2Teams")
saveAllMatchesAllOppositionIPLT20("iplMatches","iplAllMatchesAllTeams")
getCPLBattingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBowlingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBatsmen("./ipl/iplBattingBowlingDetails")
getIPLBatsmen("./iplBattingBowlingDetails")
library(dplyr)
getIPLBatsmen("./iplBattingBowlingDetails")
getIPLBowlers("./iplBattingBowlingDetails")
getwd()
source("/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2021/IPLutilities.R")
getIPLBatsmen("./iplBattingBowlingDetails")
library(dplyr)
getIPLBatsmen("./iplBattingBowlingDetails")
rm(list=ls())
library(dplyr)
source("/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2021/IPLutilities.R")
getIPLBatsmen("./iplBattingBowlingDetails")
source("/Users/tvganesh/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1/IPLutilities.R")
getIPLBatsmen("./iplBattingBowlingDetails")
getIPLBowlers("./iplBattingBowlingDetails")
setwd("~/Downloads/ipl2021")
source("IPLutilities.R")
getIPLBatsmen("./iplBattingBowlingDetails")
load("/Users/tvganesh/Downloads/ipl2021/iplBattingBowlingDetails/Punjab Kings-BattingDetails.RData")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
getIPLBowlingDetails("iplMatches","iplBattingBowlingDetails")
library(yorkr)
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
install.packages("yorkr")
install.packages("yorkr")
library(yorkr)
getwd()
setwd("~/Downloads/ipl2021")
getIPLBattingDetails("iplMatches","iplBattingBowlingDetails")
team="Punjab Kings"
dir="iplMatches"
a <- paste(dir,"/","*",team,"*",sep="")
# Gather team against all ooposition
fl <- Sys.glob(a)
length(fl)
for(i in 1:length(fl)){
# Add try-catch to handle issues
tryCatch({
load(fl[i])
match <- overs
details <- teamBattingPerfDetails(match,team,includeInfo=TRUE)
# If the side has not batted details will be NULL. Skip in that case
if(!is.null(dim(details))){
battingDetails <- rbind(battingDetails,details)
}else {
#print("Empty")
next
}
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
batting <- getTeamBattingDetails(team,dir=dir, save=TRUE,odir=odir)
odir="iplBattingBowlingDetails"
batting <- getTeamBattingDetails(team,dir=dir, save=TRUE,odir=odir)
team1="Rajasthan Royals"
team2="Royal Challengers Bangalore"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData")
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1")
dir="./ipl/iplMatches2Teams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
fl1 <- paste(dir,"/",di)
fl1 <- paste(dir,"/",d1)
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# FRahind rows by winnner, venue, date and result
a <- select(overs,date,venue,winner,result)
a <- select(matches,date,venue,winner,result)
a <- select(matches,date,venue,winner,result)
library(dplyr)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
source('~/backup/software/cricket-package/yorkrPackage/yorkr4Apr2021/yorkr/R/plotWinLossBetweenTeams.R')
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
library(ggplot2)
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title="aa"
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
team2="Kolkata Knight Riders"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
team1
dir="./ipl/iplAllMatchesAllTeams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-allMatchesAllTeams.RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllTeams-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins of",team1,"against all teams in all  matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste(team1,"-",team2,"-allMatches.RData",sep="")
dir=>"./ipl/iplMatches2Teams"
dir="./ipl/iplMatches2Teams"
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins in",team1," vs ",team2, " matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),""))))
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
dir="./ipl/iplAllMatchesAllTeams"
# Create 2 filenames with both combinations of team1 and team2
d1 <-paste("allMatchesAllOpposition-",team1,".RData",sep="")
fl1 <- paste(dir,"/",d1,sep="")
load(fl1)
a <- select(matches,date,venue,winner,result)
b=distinct(a) #Get distinct rows
winLoss <- summarise(group_by(b,winner),count=n())
x <- winLoss$winner=="NA"
winLoss$winner <- as.character(winLoss$winner)
if(sum(x) !=0) {
winLoss[x,]$winner <-"NoResult"
}
plot.title <- paste("Number of wins of",team1,"against all teams in all  matches")
ggplot(winLoss, aes(x=winner, y=count, fill=winner))+
geom_bar(stat = "identity",position="dodge") +
xlab("Winner") + ylab("Numer of Wins") +
ggtitle(bquote(atop(.(plot.title),
atop(italic("Data source:http://cricsheet.org/"),"")))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("~/backup/software/cricket-package/yorkrPackage/yorkr4Apr2021/yorkr")
library(yorkr)
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1")
shiny::runApp()
library(yorkr)
library(plotly)
library(dplyr)
library(ggplot2)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
install.packages("ggthemes")
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
ggplotly(ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))  %>%
layout(title = list(text = paste0(plot.title,
'<br>',
'<sup>',
'Data source:http://cricsheet.org/',
'</sup>')))
g <- ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
rlang::last_error()
dim(match())
dim(match)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1/ipl/iplMatches")
load("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1/ipl/iplMatches/Chennai Super Kings-Deccan Chargers-2008-05-06.RData")
match=overs
a <-filter(match,team==theTeam)
# Group batsman with non strikers and compute partnerships
df <- data.frame(summarise(group_by(a,batsman,nonStriker),sum(runs)))
library(dplyr)
library(plotly)
a <-filter(match,team==theTeam)
theTeam="Chennai Super Kings"
a <-filter(match,team==theTeam)
# Group batsman with non strikers and compute partnerships
df <- data.frame(summarise(group_by(a,batsman,nonStriker),sum(runs)))
names(df) <- c("batsman","nonStriker","runs")
opposition="aaa"
plot.title <- paste(theTeam,"Batting partnership in match (vs.",opposition,")")
g <- ggplot(data=df,aes(x=batsman,y=runs,fill=nonStriker))+
geom_bar(data=df,stat="identity") +
xlab("Batmen") + ylab("Runs Scored") +
labs(title=plot.title,subtitle="Data source:http://cricsheet.org/") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplotly(g )%>%
layout(title = list(text = paste0(plot.title,
'<br>',
'<sup>',
'Data source:http://cricsheet.org/',
'</sup>')))
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-1')
library(yorkr)
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
library(yorkr)
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-3')
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
setwd("~/Downloads")
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
library(yorkr)
convertAllYaml2RDataframesT20("ssm","ssmMenMatches","ssmWomenMatches")
setwd("~/backup/software/cricket-package/yorkrPackage/york16backup/yorkr")
shiny::runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4')
runApp('~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4')
getwd()
setwd("~/backup/software/cricket-package/yorkr-cricsheet/gpp2021-4")
deployApp()
rsconnect::deployApp()
getwd()
rsconnect::deployApp()
